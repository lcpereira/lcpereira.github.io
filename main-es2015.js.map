{"version":3,"sources":["./src/app/shared/components/ngx-change-language/ngx-change-language.component.ts","./src/app/shared/components/ngx-change-language/ngx-change-language.component.html","./src/app/shared/enums/language.enum.ts","./src/app/shared/components/ngx-change-language/ngx-change-language.module.ts","./src/environments/environment.ts","./src/app/services/local-storage.service.ts","./src/app/shared/enums/theme.enum.ts","./src/app/shared/enums/local-storage-settings.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/about/about.module.ts","./src/app/app.module.ts","./src/app/transloco/transloco-root.module.ts","./src/app/pages/about/about.component.ts","./src/app/pages/about/about.component.html","./src/app/app-routing.module.ts","./src/app/shared/components/ngx-change-theme/ngx-change-theme.component.ts","./src/app/shared/components/ngx-change-theme/ngx-change-theme.component.html","./src/app/shared/components/ngx-change-theme/ngx-change-theme.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { Language } from '@shared/enums/language.enum';\nimport { LocalStorageSettings } from '@shared/enums/local-storage-settings';\nimport { LocalStorageService } from 'src/app/services/local-storage.service';\n\n@Component({\n  selector: 'ngx-change-language',\n  templateUrl: 'ngx-change-language.component.html',\n  styleUrls: ['ngx-change-language.component.scss'],\n})\nexport class NgxchangeLanguageComponent implements OnInit {\n  language: Language = Language.en;\n\n  constructor(\n    private translocoService: TranslocoService,\n    private localStorageService: LocalStorageService\n  ) {}\n\n  get isEnglish() {\n    return this.language === Language.en;\n  }\n\n  set localStorageLanguage(language: Language) {\n    this.localStorageService.setItem(LocalStorageSettings.language, language);\n  }\n\n  ngOnInit(): void {\n    const hasLanguage = this.localStorageService.getLanguage(LocalStorageSettings.language);\n\n    if (hasLanguage) {\n      this.language = hasLanguage;\n    }\n\n    this.onChangeLanguage(this.language);\n  }\n\n  onToggleLanguage(): void {\n    const language = this.isEnglish ? Language.ptBR : Language.en;\n    this.onChangeLanguage(language);\n  }\n\n  onChangeLanguage(language: Language): void {\n    this.language = language;\n    this.localStorageLanguage = this.language;\n    this.translocoService.setActiveLang(this.language);\n  }\n}\n","<div class=\"cursor-pointer\" (click)=\"onToggleLanguage()\">\n  <span class=\"mdi uppercase text-sm font-bold text-gray-600 hover:text-purple-500\">{{\n    language\n  }}</span>\n</div>\n","export enum Language {\n  en = 'en',\n  ptBR = 'pt-br',\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxchangeLanguageComponent } from './ngx-change-language.component';\n\n@NgModule({\n  declarations: [NgxchangeLanguageComponent],\n  exports: [NgxchangeLanguageComponent],\n  imports: [CommonModule],\n})\nexport class NgxchangeLanguageModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Language } from '@shared/enums/language.enum';\nimport { LocalStorageSettings } from '@shared/enums/local-storage-settings';\nimport { Theme } from '@shared/enums/theme.enum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  constructor() {}\n\n  setItem(key: LocalStorageSettings, data: any): void {\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n\n  getTheme(key: LocalStorageSettings.theme): Theme | null {\n    const hasTheme = localStorage.getItem(key);\n\n    if (!hasTheme) {\n      return null;\n    }\n\n    return JSON.parse(hasTheme) as Theme;\n  }\n\n  getLanguage(key: LocalStorageSettings.language): Language | null {\n    const hasLanguage = localStorage.getItem(key);\n\n    if (!hasLanguage) {\n      return null;\n    }\n\n    return JSON.parse(hasLanguage) as Language;\n  }\n}\n","export enum Theme {\n  light = 'light',\n  dark = 'dark',\n}\n","export enum LocalStorageSettings {\n  theme = 'theme',\n  language = 'language',\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<div class=\"h-screen overflow-auto bg-gray-200 dark:bg-gray-800 text-gray-700 dark:text-white\">\n  <ngx-about></ngx-about>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { AboutComponent } from './about.component';\nimport { NgxChangeThemeModule } from '@shared/components/ngx-change-theme/ngx-change-theme.module';\nimport { NgxchangeLanguageModule } from '@shared/components/ngx-change-language/ngx-change-language.module';\n\n@NgModule({\n  declarations: [AboutComponent],\n  imports: [CommonModule, TranslocoModule, NgxChangeThemeModule, NgxchangeLanguageModule],\n  exports: [AboutComponent],\n  providers: [],\n})\nexport class AboutModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AboutModule } from '@pages/about/about.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslocoRootModule } from './transloco/transloco-root.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, AboutModule, HttpClientModule, TranslocoRootModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule,\n} from '@ngneat/transloco';\nimport { Injectable, NgModule } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get<Translation>(`/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [TranslocoModule],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en', 'pt-br'],\n        defaultLang: 'en',\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      }),\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader },\n  ],\n})\nexport class TranslocoRootModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'ngx-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n})\nexport class AboutComponent {\n  constructor(private translocoService: TranslocoService) {}\n\n  get language(): string {\n    return this.translocoService.getActiveLang();\n  }\n}\n","<div class=\"about max-w-4xl flex items-center h-full flex-wrap mx-auto\">\n  <div class=\"w-full rounded-lg mx-0 bg-white dark:bg-gray-900\">\n    <div class=\"px-4 md:px-8 pt-4 pb-2 flex flex-col justify-end items-end\">\n      <ngx-change-language class=\"mr-0.5\"></ngx-change-language>\n      <ngx-change-theme></ngx-change-theme>\n    </div>\n\n    <div class=\"p-4 pt-0 md:p-10 md:pt-0 text-center\">\n      <!-- Always use the mobile image -->\n      <div\n        class=\"image-profile block rounded-full shadow-xl mx-auto -mt-32 h-48 w-48 bg-cover bg-center\"\n      ></div>\n\n      <h1 class=\"text-3xl font-bold pt-4\">Leandro Carlos Pereira</h1>\n      <p class=\"text-lg font-medium text-gray-700 dark:text-gray-300 pt-2\">\n        Tech Lead | Frontend | Fullstack Developer\n      </p>\n      <div class=\"mx-auto w-4/5 pt-3 border-b-2 border-purple-500 opacity-25\"></div>\n      <p class=\"pt-4 font-bold flex items-center justify-center\">\n        <span class=\"mdi mdi-briefcase text-xl text-purple-500 pr-2\"></span>\n        <a class=\"link\" href=\"https://ze.express/\" target=\"_blank\">\n          <span>Zé Express | Ambev</span>\n        </a>\n        <a class=\"ml-8\">\n          <span class=\"mdi mdi-map-marker-radius text-xl text-purple-500 pr-2\"></span>\n          <span>{{ 'location' | transloco }}</span>\n        </a>\n      </p>\n      <p class=\"pt-6 text-sm text-left\" style=\"white-space: pre-line\">\n        {{ 'description' | transloco }}\n      </p>\n\n      <div class=\"mt-6 pt-2 pb-2 w-4/5 mx-auto flex flex-wrap items-center justify-between\">\n        <a class=\"link\" href=\"https://github.com/lcpereira\" target=\"_blank\">\n          <span class=\"mdi mdi-github text-3xl text-gray-600 hover:text-purple-500\"></span>\n        </a>\n        <a class=\"link\" href=\"https://linkedin.com/in/leandro9893\" target=\"_blank\">\n          <span class=\"mdi mdi-linkedin text-3xl text-gray-600 hover:text-purple-500\"></span>\n        </a>\n        <a class=\"link\" href=\"mailto:lcpereira.dev@gmail.com\">\n          <span class=\"mdi mdi-email text-3xl text-gray-600 hover:text-purple-500\"></span>\n        </a>\n        <a class=\"link\" href=\"/assets/cv/{{ language }}/Leandro_Carlos_Pereira.pdf\" target=\"_blank\">\n          <span class=\"mdi mdi-download text-3xl text-gray-600 hover:text-purple-500\"></span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent,\n  },\n  {\n    path: '**',\n    loadChildren: () => import('./pages/not-found/not-found.module').then((m) => m.NotFoundModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { LocalStorageSettings } from '@shared/enums/local-storage-settings';\nimport { Theme } from '@shared/enums/theme.enum';\nimport { LocalStorageService } from 'src/app/services/local-storage.service';\n\n@Component({\n  selector: 'ngx-change-theme',\n  templateUrl: 'ngx-change-theme.component.html',\n  styleUrls: ['ngx-change-theme.component.scss'],\n})\nexport class NgxChangeThemeComponent implements OnInit {\n  theme: Theme = Theme.light;\n\n  constructor(private renderer: Renderer2, private localStorageService: LocalStorageService) {}\n\n  get isDark() {\n    return this.theme === Theme.dark;\n  }\n\n  set localStorageTheme(theme: Theme) {\n    this.localStorageService.setItem(LocalStorageSettings.theme, theme);\n  }\n\n  ngOnInit(): void {\n    const hasTheme = this.localStorageService.getTheme(LocalStorageSettings.theme);\n\n    if (hasTheme) {\n      this.theme = hasTheme;\n    }\n\n    this.onChangeTheme(this.theme);\n  }\n\n  onToggleTheme(): void {\n    const theme = this.isDark ? Theme.light : Theme.dark;\n    this.onChangeTheme(theme);\n  }\n\n  onChangeTheme(theme: Theme): void {\n    this.theme = theme;\n    this.localStorageTheme = this.theme;\n\n    if (this.isDark) {\n      this.renderer.addClass(document.body, Theme.dark);\n    } else {\n      this.renderer.removeClass(document.body, Theme.dark);\n    }\n  }\n}\n","<div class=\"cursor-pointer\" (click)=\"onToggleTheme()\">\n  <span\n    class=\"mdi text-2xl text-gray-600 hover:text-purple-500\"\n    [class]=\"isDark ? 'mdi-weather-sunny' : 'mdi-weather-night'\"\n  ></span>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxChangeThemeComponent } from './ngx-change-theme.component';\n\n@NgModule({\n  declarations: [NgxChangeThemeComponent],\n  exports: [NgxChangeThemeComponent],\n  imports: [CommonModule],\n})\nexport class NgxChangeThemeModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}