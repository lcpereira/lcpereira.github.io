{"version":3,"sources":["webpack:///src/app/shared/components/ngx-change-language/ngx-change-language.component.ts","webpack:///src/app/shared/components/ngx-change-language/ngx-change-language.component.html","webpack:///src/app/shared/enums/language.enum.ts","webpack:///src/app/shared/components/ngx-change-language/ngx-change-language.module.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/local-storage.service.ts","webpack:///src/app/shared/enums/theme.enum.ts","webpack:///src/app/shared/enums/local-storage-settings.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/pages/about/about.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/transloco/transloco-root.module.ts","webpack:///src/app/pages/about/about.component.ts","webpack:///src/app/pages/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/shared/components/ngx-change-theme/ngx-change-theme.component.ts","webpack:///src/app/shared/components/ngx-change-theme/ngx-change-theme.component.html","webpack:///src/app/shared/components/ngx-change-theme/ngx-change-theme.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["NgxchangeLanguageComponent","translocoService","localStorageService","language","en","setItem","hasLanguage","getLanguage","onChangeLanguage","isEnglish","ptBR","localStorageLanguage","setActiveLang","onToggleLanguage","Language","NgxchangeLanguageModule","environment","production","LocalStorageService","key","data","localStorage","JSON","stringify","hasTheme","getItem","parse","Theme","LocalStorageSettings","AppComponent","AboutModule","AppModule","TranslocoHttpLoader","http","lang","get","TranslocoRootModule","provide","useValue","availableLangs","defaultLang","reRenderOnLangChange","prodMode","useClass","AboutComponent","getActiveLang","routes","path","component","loadChildren","then","m","NotFoundModule","AppRoutingModule","forRoot","NgxChangeThemeComponent","renderer","theme","light","dark","getTheme","onChangeTheme","isDark","localStorageTheme","addClass","document","body","removeClass","onToggleTheme","NgxChangeThemeModule","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { Language } from '@shared/enums/language.enum';\nimport { LocalStorageSettings } from '@shared/enums/local-storage-settings';\nimport { LocalStorageService } from 'src/app/services/local-storage.service';\n\n@Component({\n  selector: 'ngx-change-language',\n  templateUrl: 'ngx-change-language.component.html',\n  styleUrls: ['ngx-change-language.component.scss'],\n})\nexport class NgxchangeLanguageComponent implements OnInit {\n  language: Language = Language.en;\n\n  constructor(\n    private translocoService: TranslocoService,\n    private localStorageService: LocalStorageService\n  ) {}\n\n  get isEnglish() {\n    return this.language === Language.en;\n  }\n\n  set localStorageLanguage(language: Language) {\n    this.localStorageService.setItem(LocalStorageSettings.language, language);\n  }\n\n  ngOnInit(): void {\n    const hasLanguage = this.localStorageService.getLanguage(LocalStorageSettings.language);\n\n    if (hasLanguage) {\n      this.language = hasLanguage;\n    }\n\n    this.onChangeLanguage(this.language);\n  }\n\n  onToggleLanguage(): void {\n    const language = this.isEnglish ? Language.ptBR : Language.en;\n    this.onChangeLanguage(language);\n  }\n\n  onChangeLanguage(language: Language): void {\n    this.language = language;\n    this.localStorageLanguage = this.language;\n    this.translocoService.setActiveLang(this.language);\n  }\n}\n","<div class=\"cursor-pointer\" (click)=\"onToggleLanguage()\">\n  <span class=\"mdi uppercase text-sm font-bold text-gray-600 hover:text-purple-500\">{{\n    language\n  }}</span>\n</div>\n","export enum Language {\n  en = 'en',\n  ptBR = 'pt-br',\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxchangeLanguageComponent } from './ngx-change-language.component';\n\n@NgModule({\n  declarations: [NgxchangeLanguageComponent],\n  exports: [NgxchangeLanguageComponent],\n  imports: [CommonModule],\n})\nexport class NgxchangeLanguageModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Language } from '@shared/enums/language.enum';\nimport { LocalStorageSettings } from '@shared/enums/local-storage-settings';\nimport { Theme } from '@shared/enums/theme.enum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  constructor() {}\n\n  setItem(key: LocalStorageSettings, data: any): void {\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n\n  getTheme(key: LocalStorageSettings.theme): Theme | null {\n    const hasTheme = localStorage.getItem(key);\n\n    if (!hasTheme) {\n      return null;\n    }\n\n    return JSON.parse(hasTheme) as Theme;\n  }\n\n  getLanguage(key: LocalStorageSettings.language): Language | null {\n    const hasLanguage = localStorage.getItem(key);\n\n    if (!hasLanguage) {\n      return null;\n    }\n\n    return JSON.parse(hasLanguage) as Language;\n  }\n}\n","export enum Theme {\n  light = 'light',\n  dark = 'dark',\n}\n","export enum LocalStorageSettings {\n  theme = 'theme',\n  language = 'language',\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<div class=\"h-screen overflow-auto bg-gray-200 dark:bg-gray-800 text-gray-700 dark:text-white\">\n  <ngx-about></ngx-about>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { AboutComponent } from './about.component';\nimport { NgxChangeThemeModule } from '@shared/components/ngx-change-theme/ngx-change-theme.module';\nimport { NgxchangeLanguageModule } from '@shared/components/ngx-change-language/ngx-change-language.module';\n\n@NgModule({\n  declarations: [AboutComponent],\n  imports: [CommonModule, TranslocoModule, NgxChangeThemeModule, NgxchangeLanguageModule],\n  exports: [AboutComponent],\n  providers: [],\n})\nexport class AboutModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AboutModule } from '@pages/about/about.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslocoRootModule } from './transloco/transloco-root.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, AboutModule, HttpClientModule, TranslocoRootModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule,\n} from '@ngneat/transloco';\nimport { Injectable, NgModule } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get<Translation>(`/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [TranslocoModule],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en', 'pt-br'],\n        defaultLang: 'en',\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      }),\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader },\n  ],\n})\nexport class TranslocoRootModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'ngx-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n})\nexport class AboutComponent {\n  constructor(private translocoService: TranslocoService) {}\n\n  get language(): string {\n    return this.translocoService.getActiveLang();\n  }\n}\n","<div class=\"about max-w-4xl flex items-center h-full flex-wrap mx-auto\">\n  <div class=\"w-full rounded-lg mx-0 bg-white dark:bg-gray-900\">\n    <div class=\"px-4 md:px-8 pt-4 pb-2 flex flex-col justify-end items-end\">\n      <ngx-change-language class=\"mr-0.5\"></ngx-change-language>\n      <ngx-change-theme></ngx-change-theme>\n    </div>\n\n    <div class=\"p-4 pt-0 md:p-10 md:pt-0 text-center\">\n      <!-- Always use the mobile image -->\n      <div\n        class=\"image-profile block rounded-full shadow-xl mx-auto -mt-32 h-48 w-48 bg-cover bg-center\"\n      ></div>\n\n      <h1 class=\"text-3xl font-bold pt-4\">Leandro Carlos Pereira</h1>\n      <p class=\"text-lg font-medium text-gray-700 dark:text-gray-300 pt-2\">\n        Tech Lead | Fullstack Developer\n      </p>\n      <div class=\"mx-auto w-4/5 pt-3 border-b-2 border-purple-500 opacity-25\"></div>\n      <p class=\"pt-4 font-bold flex items-center justify-center\">\n        <span class=\"mdi mdi-briefcase text-xl text-purple-500 pr-2\"></span>\n        <a class=\"link\" href=\"https://ze.express/\" target=\"_blank\">\n          <span>Zé Express | Ambev</span>\n        </a>\n      </p>\n      <p class=\"pt-2 flex items-center justify-center\">\n        <span class=\"mdi mdi-map-marker-radius text-xl text-purple-500 pr-2\"></span>\n        <span>{{ 'location' | transloco }}</span>\n      </p>\n      <p class=\"pt-6 text-sm text-left\" style=\"white-space: pre-line\">\n        {{ 'description' | transloco }}\n      </p>\n\n      <div class=\"mt-6 pb-16 w-4/5 mx-auto flex flex-wrap items-center justify-between\">\n        <a class=\"link\" href=\"https://github.com/lcpereira\" target=\"_blank\">\n          <span class=\"mdi mdi-github text-3xl text-gray-600 hover:text-purple-500\"></span>\n        </a>\n        <a class=\"link\" href=\"https://linkedin.com/in/leandro9893\" target=\"_blank\">\n          <span class=\"mdi mdi-linkedin text-3xl text-gray-600 hover:text-purple-500\"></span>\n        </a>\n        <a class=\"link\" href=\"mailto:lcpereira.dev@gmail.com\">\n          <span class=\"mdi mdi-email text-3xl text-gray-600 hover:text-purple-500\"></span>\n        </a>\n        <a class=\"link\" href=\"https://instagram.com/lcpereira.dev/\" target=\"_blank\">\n          <span class=\"mdi mdi-instagram text-3xl text-gray-600 hover:text-purple-500\"></span>\n        </a>\n        <a class=\"link\" href=\"/assets/cv/{{ language }}/Leandro_Carlos_Pereira.pdf\" target=\"_blank\">\n          <span class=\"mdi mdi-download text-3xl text-gray-600 hover:text-purple-500\"></span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent,\n  },\n  {\n    path: '**',\n    loadChildren: () => import('./pages/not-found/not-found.module').then((m) => m.NotFoundModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { LocalStorageSettings } from '@shared/enums/local-storage-settings';\nimport { Theme } from '@shared/enums/theme.enum';\nimport { LocalStorageService } from 'src/app/services/local-storage.service';\n\n@Component({\n  selector: 'ngx-change-theme',\n  templateUrl: 'ngx-change-theme.component.html',\n  styleUrls: ['ngx-change-theme.component.scss'],\n})\nexport class NgxChangeThemeComponent implements OnInit {\n  theme: Theme = Theme.light;\n\n  constructor(private renderer: Renderer2, private localStorageService: LocalStorageService) {}\n\n  get isDark() {\n    return this.theme === Theme.dark;\n  }\n\n  set localStorageTheme(theme: Theme) {\n    this.localStorageService.setItem(LocalStorageSettings.theme, theme);\n  }\n\n  ngOnInit(): void {\n    const hasTheme = this.localStorageService.getTheme(LocalStorageSettings.theme);\n\n    if (hasTheme) {\n      this.theme = hasTheme;\n    }\n\n    this.onChangeTheme(this.theme);\n  }\n\n  onToggleTheme(): void {\n    const theme = this.isDark ? Theme.light : Theme.dark;\n    this.onChangeTheme(theme);\n  }\n\n  onChangeTheme(theme: Theme): void {\n    this.theme = theme;\n    this.localStorageTheme = this.theme;\n\n    if (this.isDark) {\n      this.renderer.addClass(document.body, Theme.dark);\n    } else {\n      this.renderer.removeClass(document.body, Theme.dark);\n    }\n  }\n}\n","<div class=\"cursor-pointer\" (click)=\"onToggleTheme()\">\n  <span\n    class=\"mdi text-2xl text-gray-600 hover:text-purple-500\"\n    [class]=\"isDark ? 'mdi-weather-sunny' : 'mdi-weather-night'\"\n  ></span>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxChangeThemeComponent } from './ngx-change-theme.component';\n\n@NgModule({\n  declarations: [NgxChangeThemeComponent],\n  exports: [NgxChangeThemeComponent],\n  imports: [CommonModule],\n})\nexport class NgxChangeThemeModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}